{"ast":null,"code":"import _slicedToArray from\"C:/Users/titi_/WebstormProjects/TMS_FE_16/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";//Для избежания props drilling используется createContext и useContext hook\n//React.createContext создает объект\n//https://www.w3schools.com/react/react_usecontext.asp\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ModalContext=/*#__PURE__*/React.createContext(false);//HOC - higher order component(компонент высшего порядка)\n//Принцип HOC заключается в том, что (1) данный компонент оборачивает в себя все остальное приложение или часть данного приложения, (2)\n//его можно использовать на любом уровне приложения завернув в него какой-то компонент, у которого внешне появятся новые доп свойства.\nvar GlobalModalProvider=function GlobalModalProvider(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),modalContent=_useState2[0],setModalContent=_useState2[1];return/*#__PURE__*/_jsxs(React.Fragment,{children:[!!modalContent&&/*#__PURE__*/ // && --> тогда возвращать/Если this.state.modalContent будет 0 в state, то react не отобразит модально окно, но отрендерит 0 в браузере. Для избежания этого, нужно поставить !!this.state.modalContent, чтобы 0 не отрендерился\n_jsx(\"div\",{className:'modal',children:modalContent}),/*#__PURE__*/_jsx(ModalContext.Provider,{value:setModalContent,children:props.children})]});};export default GlobalModalProvider;","map":{"version":3,"sources":["C:/Users/titi_/WebstormProjects/TMS_FE_16/src/HOC/GlobalModalProvider.jsx"],"names":["React","useState","ModalContext","createContext","GlobalModalProvider","props","modalContent","setModalContent","children"],"mappings":"+HAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAEA;AACA;AACA;wFACA,MAAO,IAAMC,CAAAA,YAAY,cAAGF,KAAK,CAACG,aAAN,CAAoB,KAApB,CAArB,CAGP;AACA;AACA;AACA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACnC,cAAwCJ,QAAQ,EAAhD,wCAAOK,YAAP,eAAqBC,eAArB,eAGA,mBAAO,MAAC,KAAD,CAAO,QAAP,YAGF,CAAC,CAACD,YAAF,gBAA0B;AAC3B,YAAK,SAAS,CAAE,OAAhB,UACKA,YADL,EAJG,cAQH,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEC,eAA9B,UAGKF,KAAK,CAACG,QAHX,EARG,GAAP,CAmBH,CAvBD,CAyBA,cAAeJ,CAAAA,mBAAf","sourcesContent":["import React, {useState} from \"react\";\r\n\r\n//Для избежания props drilling используется createContext и useContext hook\r\n//React.createContext создает объект\r\n//https://www.w3schools.com/react/react_usecontext.asp\r\nexport const ModalContext = React.createContext(false);\r\n\r\n\r\n//HOC - higher order component(компонент высшего порядка)\r\n//Принцип HOC заключается в том, что (1) данный компонент оборачивает в себя все остальное приложение или часть данного приложения, (2)\r\n//его можно использовать на любом уровне приложения завернув в него какой-то компонент, у которого внешне появятся новые доп свойства.\r\nconst GlobalModalProvider = (props) => {\r\n    const [modalContent, setModalContent] = useState();\r\n\r\n\r\n    return <React.Fragment>\r\n        {/*Интегрируем модальное окно здесь*/}\r\n        {/*Прячем модальное окно*/}\r\n        {!!modalContent &&         // && --> тогда возвращать/Если this.state.modalContent будет 0 в state, то react не отобразит модально окно, но отрендерит 0 в браузере. Для избежания этого, нужно поставить !!this.state.modalContent, чтобы 0 не отрендерился\r\n        <div className={'modal'}>\r\n            {modalContent}\r\n        </div>\r\n        }\r\n        <ModalContext.Provider value={setModalContent}>\r\n            {//value которое передается в данном ModalContext.Provider ниже по иерархии компонентов в props.children.\r\n            }\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n        {//props.children отображает все то, что находится между открывающимся и закрывающимся тегами компонента GlobalModalProvider. Если контент помещен в форме одного тега формата props, то через них передаем children.\r\n            //Если функция setModalContent сработает, то компонент GlobalModalProvider сработает поверх обернутого компонента MainLayout.\r\n            //Точка отчета и вставка самого компонента GlobalModalProvider происходит здесь, после того, как setModalContent прошел сверху вниз до компонента Card и обновил modalContent.\r\n            //props.render(setModalContent)\r\n        }\r\n    </React.Fragment>\r\n}\r\n\r\nexport default GlobalModalProvider\r\n"]},"metadata":{},"sourceType":"module"}
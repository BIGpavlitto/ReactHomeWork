{"ast":null,"code":"import _classCallCheck from\"C:/Users/titi_/WebstormProjects/TMS_FE_16/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/titi_/WebstormProjects/TMS_FE_16/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/titi_/WebstormProjects/TMS_FE_16/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/titi_/WebstormProjects/TMS_FE_16/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from'react';import GlobalModalProvider from\"HOC/GlobalModalProvider\";import GlobalThemeProvider from\"HOC/GlobalThemeProvider\";import MainLayoutN from\"Layouts/MainLayout/MainLayoutN\";import{jsx as _jsx}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={change:true};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/ (/*Вариант без React.createContext*/ /*<GlobalModalProvider render={(setModalContent) =>{             //stuffToShow - props, который рендерит. Таким образом получаем изнутри компонента GlobalModalProvider значение и вставляем в MainLayout\r\n                    return (<MainLayout setModalContent={setModalContent}/>)\r\n                    //Комментарий по поводу render prop\r\n                    //https://www.geeksforgeeks.org/react-js-render-props/\r\n             }}/>*/ /*Вариант с React.createContext*/_jsx(GlobalThemeProvider,{children:/*#__PURE__*/_jsx(GlobalModalProvider,{children:/*#__PURE__*/_jsx(MainLayoutN,{})})}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Users/titi_/WebstormProjects/TMS_FE_16/src/App.jsx"],"names":["React","GlobalModalProvider","GlobalThemeProvider","MainLayoutN","App","props","state","change","Component"],"mappings":"4eAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,mBAAP,KAAgC,yBAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gCAAxB,C,8CAEMC,CAAAA,G,sGACF,aAAYC,KAAZ,CAAmB,qCACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CAACC,MAAM,CAAE,IAAT,CAAb,CAFe,aAGlB,C,sCACD,iBAAQ,CACJ,oBACI,oCADJ,CAGI;AACZ;AACA;AACA;AACA,mBAPQ,CASI,iCAEA,KAAC,mBAAD,wBACI,KAAC,mBAAD,wBACI,KAAC,WAAD,IADJ,EADJ,EAXJ,EAiBH,C,iBAvBaP,KAAK,CAACQ,S,EA0BxB,cAAeJ,CAAAA,GAAf","sourcesContent":["import React from 'react';\r\nimport GlobalModalProvider from \"HOC/GlobalModalProvider\";\r\nimport GlobalThemeProvider from \"HOC/GlobalThemeProvider\";\r\nimport MainLayoutN from \"Layouts/MainLayout/MainLayoutN\";\r\n\r\nclass App extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {change: true}\r\n    }\r\n    render(){\r\n        return(\r\n            /*Вариант без React.createContext*/\r\n\r\n            /*<GlobalModalProvider render={(setModalContent) =>{             //stuffToShow - props, который рендерит. Таким образом получаем изнутри компонента GlobalModalProvider значение и вставляем в MainLayout\r\n                    return (<MainLayout setModalContent={setModalContent}/>)\r\n                    //Комментарий по поводу render prop\r\n                    //https://www.geeksforgeeks.org/react-js-render-props/\r\n             }}/>*/\r\n\r\n            /*Вариант с React.createContext*/\r\n\r\n            <GlobalThemeProvider>\r\n                <GlobalModalProvider>\r\n                    <MainLayoutN/>\r\n                </GlobalModalProvider>\r\n            </GlobalThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}